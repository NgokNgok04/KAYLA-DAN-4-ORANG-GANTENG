plugins {
    id 'java'
}

group = 'app'
version = '1.0.0'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        resources {
            srcDir 'assets'
        }
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'org.yaml:snakeyaml:2.2'
}

jar {
    manifest {
        attributes 'Main-Class' : 'app.Main'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it)}
    }
}

task YAMLFileLoaderJar(type: Jar) {
    archiveBaseName = 'YAMLFileLoader'
    archiveVersion = ''

    // Include the YAMLFileLoader class
    from(sourceSets.main.output) {
        include 'models/**'
        include 'utils/**' // Include utils if needed by YAMLFileLoader
        include 'gamexception/**'
        exclude 'models/TxtFileLoader.class'
        exclude 'models/JSONFileLoader.class'
    }

    // Include dependencies
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        // Add exclusions here
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }

    manifest {
        attributes(
                'Implementation-Title': 'YAML File Loader',
                'Implementation-Version': version
        )
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


task JSONFileLoaderJar(type: Jar) {
    archiveBaseName = 'JSONFileLoader'
    archiveVersion = ''

    // Include the YAMLFileLoader class
    from(sourceSets.main.output) {
        include 'models/**'
        include 'utils/**' // Include utils if needed by YAMLFileLoader
        include 'gamexception/**'
        exclude 'models/YAMLFileLoader.class'
        exclude 'models/TxtFileLoader.class'
    }

    // Include dependencies
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }{
        // Add exclusions here
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }

    manifest {
        attributes(
                'Implementation-Title': 'TXT File Loader',
                'Implementation-Version': version
        )
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

test {
    useJUnitPlatform()
}
