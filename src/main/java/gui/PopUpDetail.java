/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.awt.*;
import javax.swing.table.DefaultTableModel;
import models.*;

import javax.swing.ImageIcon;

/**
 *
 * @author Suthasoma
 */
public class PopUpDetail extends javax.swing.JFrame {
    
    private CardItem parent;
    private LivingThing object;

    /**
     * Creates new form PopUpDetail
     */
    public PopUpDetail(CardItem parent) {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.parent = parent;
        this.object = (LivingThing) parent.getObject();
        setEffectTable();
        setBackground(new Color(0.0f, 0.0f, 0.0f, 0.0f));
        roundedPane1.setBackground(new Color(0.9f, 0.9f, 0.8f, 0.8f));
        if (object instanceof Animal) {
            setDataAnimal();
        } else {
            setDataPlant();
        }
        setLocationRelativeTo(parent.getsParent());
    }
    
    private void setEffectTable() {
        String data[][] = new String[5][2];
        data[0][0] = "ACCELERATE";
        data[1][0] = "INSTANT_HARVEST";
        data[2][0] = "DELAY";
        data[3][0] = "PROTECT";
        data[4][0] = "TRAP";
        data[0][1] = "0";
        data[1][1] = "0";
        data[2][1] = "0";
        data[3][1] = "0";
        data[4][1] = "0";
        for (Item item : object.getItems()) {
            for (int i = 0; i < 5; i++) {
                if (item.getName().equals(data[i][0])) {
                    data[i][1] = Integer.toString(Integer.parseInt(data[i][1])+1);
                    break;
                }
            }
        }
        DefaultTableModel table = (DefaultTableModel) effectTable.getModel();
        String[] columnName = new String[]{"Item", "Jumlah"};
        table.setDataVector(data, columnName);
    }

    private void setDataPlant() {
        Plant plant = (Plant) object;
        weightLabel.setText("Umur:");
        harvestLabel.setText("Umur Panen:");
        weightAmount.setText(Integer.toString(plant.getAge()));
        harvestAmount.setText(Integer.toString(plant.getAgeToHarvest()));
        if (plant.isInstantHarvest() || plant.getAge() >= plant.getAgeToHarvest()) {
            nameLabel.setText(plant.getProduct().getName());
            imageLabel.setIcon(new ImageIcon(plant.getProduct().getImage().getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(), Image.SCALE_SMOOTH)));
        } else {
            panenButton.setEnabled(false);
            nameLabel.setText(plant.getName());
            imageLabel.setIcon(new ImageIcon(plant.getImage().getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(), Image.SCALE_SMOOTH)));
        }
    }
    
    private void setDataAnimal() {
        Animal animal = (Animal) object;
        weightLabel.setText("Berat:");
        harvestLabel.setText("Berat Panen:");
        weightAmount.setText(Integer.toString(animal.getWeight()));
        harvestAmount.setText(Integer.toString(animal.getWeightToHarvest()));
        nameLabel.setText(object.getName());
        imageLabel.setIcon(new ImageIcon(animal.getImage().getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(), Image.SCALE_SMOOTH)));
        if (!animal.isInstantHarvest() && animal.getWeight() < animal.getWeightToHarvest()) {
            panenButton.setEnabled(false);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roundedPane1 = new gui.RoundedPane();
        imageLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        effectTable = new javax.swing.JTable();
        harvestLabel = new javax.swing.JLabel();
        backButton = new gui.ButtonRounded();
        weightLabel = new javax.swing.JLabel();
        panenButton = new gui.ButtonRounded();
        nameLabel = new javax.swing.JLabel();
        weightAmount = new javax.swing.JLabel();
        harvestAmount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));
        setUndecorated(true);
        setResizable(false);

        roundedPane1.setRoundBottomLeft(30);
        roundedPane1.setRoundBottomRight(30);
        roundedPane1.setRoundTopLeft(30);
        roundedPane1.setRoundTopRight(30);

        effectTable.setBackground(new java.awt.Color(255, 255, 255));
        effectTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        effectTable.setForeground(new java.awt.Color(0, 0, 0));
        effectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Item", "Jumlah"
            }
        ));
        effectTable.setMaximumSize(new java.awt.Dimension(2147483647, 130));
        effectTable.setMinimumSize(new java.awt.Dimension(30, 129));
        effectTable.setRequestFocusEnabled(false);
        effectTable.setRowHeight(22);
        jScrollPane3.setViewportView(effectTable);

        harvestLabel.setText("jLabel1");

        backButton.setText("Kembali");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        weightLabel.setText("jLabel1");

        panenButton.setText("Panen");
        panenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panenButtonActionPerformed(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel.setAlignmentX(1.0F);
        nameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        weightAmount.setText("jLabel1");

        harvestAmount.setText("jLabel1");

        javax.swing.GroupLayout roundedPane1Layout = new javax.swing.GroupLayout(roundedPane1);
        roundedPane1.setLayout(roundedPane1Layout);
        roundedPane1Layout.setHorizontalGroup(
            roundedPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPane1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(roundedPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundedPane1Layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(roundedPane1Layout.createSequentialGroup()
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(roundedPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(roundedPane1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(roundedPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(roundedPane1Layout.createSequentialGroup()
                                        .addComponent(weightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(weightAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(roundedPane1Layout.createSequentialGroup()
                                        .addComponent(harvestLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(harvestAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(roundedPane1Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(panenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 16, Short.MAX_VALUE))))
        );
        roundedPane1Layout.setVerticalGroup(
            roundedPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundedPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roundedPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(roundedPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundedPane1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(roundedPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(weightLabel)
                            .addComponent(weightAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(roundedPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(harvestLabel)
                            .addComponent(harvestAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(roundedPane1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(roundedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(roundedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        parent.getsParent().setEnabled(true);
        parent.getsParent().setFocusable(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void panenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_panenButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("Harvesttt!!!");
    }//GEN-LAST:event_panenButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gui.ButtonRounded backButton;
    private javax.swing.JTable effectTable;
    private javax.swing.JLabel harvestAmount;
    private javax.swing.JLabel harvestLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel nameLabel;
    private gui.ButtonRounded panenButton;
    private gui.RoundedPane roundedPane1;
    private javax.swing.JLabel weightAmount;
    private javax.swing.JLabel weightLabel;
    // End of variables declaration//GEN-END:variables
}
